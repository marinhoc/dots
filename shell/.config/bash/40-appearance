prompt() {
    # use different colors depending on last exit status
    local reset accent_1 accent_2 exit_status=$?

    reset='\[\e[m\]'

    ((exit_status != 0)) && {
        accent_1='\[\e[32m\]'
        accent_2='\[\e[91m\]'
    } || {
        accent_1='\[\e[91m\]'
        accent_2='\[\e[32m\]'
    }

    # use different symbol for '$HOME' when using ssh
    local short_home

    [[ $SSH_TTY || $SSH_CLIENT ]] \
        && short_home='><>'       \
        || short_home='~'

    # shorten long '$PWD'
    local -a parts short_pwd=$PWD

    short_pwd=${short_pwd//$/\\$}   # $ => \$
    short_pwd=${short_pwd//\\/\\\\} # \ => \\
    short_pwd=${short_pwd//\`/\\\`} # ` => \`
    short_pwd=${short_pwd/#$HOME/$short_home}

    IFS='/' read -r -a parts <<< $short_pwd

    ((${#parts[@]} > 3)) &&
        short_pwd=${parts[0]}/${parts[1]}/.../${parts[@]: -1}

    # set terminal title to '$short_pwd'
    local term_title

    term_title='\[\e]0;'$short_pwd'\]\[\a\]'

    # set git status indicator
    local -a git_output git_status current_dir=$PWD

    while [[ $current_dir ]]; do
        [[ -d $current_dir/.git ]] && {
            mapfile -t git_output <<< $(git status --branch --porcelain)

            [[ $git_output =~ '[ahead '[0-9]+']'$ ]] \
                && git_status=' +'                   \
                || git_status=' ='

            ((${#git_output[@]} > 1)) &&
                git_status=' !'

            break
        }

        current_dir=${current_dir%/*}
    done

    # put the prompt together
    PS1="$term_title$accent_1$short_pwd$accent_2$git_status$reset "
}

PROMPT_COMMAND=prompt

# ls_colors
[[ $LS_COLORS ]] && return

export LS_COLORS="\
bd=93:\
cd=93:\
di=34:\
do=95:\
ex=92:\
fi=97:\
ln=32:\
mh=97:\
mi=90:\
no=97:\
or=90:\
pi=33:\
rs=97:\
so=95:\
ca=41;30:\
ow=42;34:\
sg=43;30:\
st=44;30:\
su=41;97:\
tw=42;30:"

# vim: ft=bash
